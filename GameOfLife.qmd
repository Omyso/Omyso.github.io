---
title: "Conway's Game of Life"
---

## Version on PyBadge

{{< video https://www.youtube.com/embed/m9PuoQu1-i0 >}}

I initially coded [Conway's Game of Life](https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life) on a PyBadge using CircuitPython. The Game of Life uses simple rules to take an inital "population" and capture its state at each frame. The video above shows the Penta-Decathlon which is an infinitely repeating pattern with a period of 15.

## Python version using Matplotlib animation

```{python}
"""
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation

HEIGHT = 160
WIDTH = 120

def randomGrid():
    return np.random.choice([1, 0], WIDTH*HEIGHT, p = [0.2, 0.8]).reshape(WIDTH, HEIGHT)

def validIndex(x, y):
    return 0 <= x < WIDTH and 0 <= y < HEIGHT

def update(frame, img, world):
    newWorld = np.zeros((WIDTH, HEIGHT))
    for x in range(WIDTH):
        for y in range(HEIGHT):
            total = 0
            neighbors = [[x + 1, y + 1], [x + 1, y], [x, y + 1], [x - 1, y + 1], [x + 1, y - 1], [x - 1, y], [x - 1, y - 1], [x, y - 1]]
            for neighbor in neighbors:
                if validIndex(neighbor[0], neighbor[1]) and world[neighbor[0], neighbor[1]] == 1:
                    total += 1
            
            if world[x, y] == 1:
                if (total < 2) or (total > 3):
                    newWorld[x, y] = 0
                else:
                    newWorld[x, y] = 1
            else:
                if total == 3:
                    newWorld[x, y] = 1
    
    img.set_data(newWorld)
    world[:] = newWorld[:]
    return img

world = randomGrid()

fig, ax = plt.subplots()
img = ax.imshow(world, interpolation='nearest')
ani = animation.FuncAnimation(fig, update, fargs=(img, world), frames = 100, interval=5000, save_count=50)
 
f = r"animation.gif" 
writergif = animation.PillowWriter(fps=10) 
ani.save(f, writer=writergif)
"""
```

![](animation.gif)

More recently I coded a version in Python using matplotlib animation which resulted in the video here. It starts with a completely random grid and uses the rules for 100 frames. 